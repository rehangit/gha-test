name: â™º deploy to env

on:
  workflow_call:
    inputs:
      env:
        type: string
        description: Environment to deploy to. One of [dev, stg, int, prod]
        required: true

jobs:
  build:
    uses: ./.github/workflows/_build.yml
    with:
      upload-env: ${{ inputs.env }}
    secrets: inherit

  tf:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: ${{ inputs.env }}
    env:
      env: ${{ inputs.env }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo Release Tag=${{ github.event.release.tag_name }}
        shell: bash

      - name: Check tag
        if: inputs.env != 'dev'
        run: |
          version=$(jq '.version' package.json | tr -d '"') # read package version without quotes
          suffix=$([ "$env" = "prod" ] && (echo "") || (echo "-$env"))
          expected=v$version$suffix
          [ "${{github.event.release.tag_name}}" = "$expected" ] || { echo "Tag name must be: $expected"; exit 1; }
        shell: bash

      - name: Check main branch
        if: inputs.env != 'dev'
        run: |
          if [ "$(git rev-parse --abbrev-ref HEAD)" != "main" ]; then
            echo "This tag is not from the main branch. Exiting."
            exit 1
          fi
        shell: bash

      - name: Terraform apply
        run: |
          echo terraform init -input=false -backend-config="key=terraform/deployments/${env}/terraform.tfstate"
          echo terraform apply -auto-approve -input=false -var="env=${env}"
        shell: bash
