name: â™º auto bump versions

on:
  pull_request_review:
    types: submitted

jobs:
  Show-Context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump github event state
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event) }}
        run: |
          echo "github.event: $GITHUB_CONTEXT"

  Version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Count approvals on current pull request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Counting approvals..."
          reviews=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews)
          echo "Reviews: $reviews"
          unique_approvals=$(echo "$reviews" | jq '[.[] | { state, login: .user.login}] | unique_by({login, state}) | [.[] | select(.state == "APPROVED")] | length')
          echo "Number of unique approvals: $unique_approvals"
          echo "approvals=$unique_approvals"
          echo "approvals=$unique_approvals" >> $GITHUB_ENV

          is_protected=$(gh api repos/${{ github.repository }}/branches/${{ github.event.pull_request.base.ref }} | jq '.protected')
          echo "is_protected=$is_protected"
          if [ "$is_protected" = "false" ]; then
            echo "Branch not protected. Hence required_approvals=0"
            echo "required_approvals=0" >> $GITHUB_ENV
            exit 0
          fi
          required_approvals=$(gh api repos/${{ github.repository }}/branches/${{ github.event.pull_request.base.ref }}/protection | jq '.required_pull_request_reviews.required_approving_review_count')
          echo "required_approvals=$required_approvals"
          echo "required_approvals=$required_approvals" >> $GITHUB_ENV

      - name: Auto patch packages versions
        if: ${{ github.env.required_approvals == 0 || github.env.approvals >= github.env.required_approvals }}
        run: |
          echo "Auto patching packages versions..."
